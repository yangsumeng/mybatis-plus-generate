package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import ${superRepositoryClassPackage};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import lombok.extern.slf4j.Slf4j;

 /**
 * @Description : $!{table.comment}【service实现】
 * @time 创建时间 : ${date}
 * @author : ${author}
 * @Copyright (c) ${date} 易视腾科技
 * @version $!{version}
 */
@Service
@Transactional
@Slf4j
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {
}
#else
public class ${table.serviceImplName} extends ${superServiceImplClass}<${entity}> implements ${table.serviceName} {

    @Autowired
    ${superRepositoryClass}  ${table.entityPath}Repository;

    @Autowired
    ${table.mapperName}  ${table.entityPath}Mapper;

    @Override
    public ${superRepositoryClass}<${entity}, Long> getRepository() {
        return ${table.entityPath}Repository;
    }
##	/**自动生成 ${date} */
##    @Override
##	public Page<Map<String,Object>> selectMapList(Page<Map<String,Object>> page, Map<String,Object> params) {
##		List<Map<String,Object>> list = ${table.entityPath}Mapper.selectMapList(page,params);
##		return page.setRecords(list);
##	}
	#if(${cfg.getLabelAndValueList})
            /**
             * $!{table.comment} 获取页面选择列表
             *
             * @author ${author}
             * @since ${date}
			 * 自动生成 ${date}
             */
	public List<Map<String,Object>> getLabelAndValueList(Map<String,Object> params){
		List<Map<String,Object>> list = ${table.entityPath}Mapper.getLabelAndValueList(params);
		return list;
	}
	#end
#if(${cfg.needEmptyMethod})
	#foreach($monthName in ${cfg.emptyMethods})
	/**
	 *  $monthName 方法
	 *  自动生成 ${date}
	 */
#if(${monthName.endsWith("Page")})
	public List<Map<String,Object>> ${monthName}(Page<Map<String,Object>> page,Map<String,Object> params){
        List<Map<String,Object>> result = ${table.entityPath}Mapper.${monthName}(page,params);
        return result;
	}
#else
	public List<Map<String,Object>> ${monthName}(Map<String,Object> params){
        List<Map<String,Object>> result = ${table.entityPath}Mapper.${monthName}(params);
        return result;
	}
#end
	#end
#end
}
#end
